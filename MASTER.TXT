Exercice 11.1
Écrivez une fonction qui renvoie la somme de cinq nombres fournis en argument
      Var somme, resultat, n1, n2, n3, n4, n5 en entier
Fonction somme(A, B, C, D, E en entier) en entier Renvoyer A+B+C+D+E
Début
Ecrire “5 nombres” Lire n1, n2, n3, n4, n5
resultat ← somme(1, n2, n3, n4, n5) Ecrire “le résultat est :” resultat
Fin


Exercice 11,2
Écrivez une fonction qui renvoie le nombre de voyelles contenues dans une chaîne de caractères passée en argument. Au passage, notez qu'une fonction a tout à fait le droit d'appeler une autre fonction.
 
    Fonction NbVoyelles(Mot en caractère) en numérique Var i, nb en numérique
nb ← 1 à len(Mot)
Si trouve( “aeiouy”, Mid(Mot, i, 1)) <> 0 alors nb ← nb + 1
Finsi
i suivant
Renvoyer nb Finfonction



 Exercice 11.3
Réécrivez la fonction Trouve, vue précédemment, à l’aide des fonctions Mid et Len (comme quoi, Trouve, à la différence de Mid et Len, n’est pas une fonction indispensable dans un langage).
      Fonction
 trouver
(A, B en caractère) en entier
var i en entier
si len(b) > len(a) alors // si le B est plus grand que A, la fonction renverra faut
renvoyer 0
sinon
Pour i ← 1 à len(A)+1 - len(B)
si mid(A, i , len(B)) = B alors // on recherche dans la position du caractère B dans A renvoyer i
i suivant
FinFonction
  Damier
 
 Écrire un algorithme de jeu de dames très simplifié. L’ordinateur demande à l’utilisateur dans quelle case se trouve son pion (quelle ligne, quelle colonne). On met en place un contrôle de saisie afin de vérifier la validité des valeurs entrées.
Ensuite, on demande à l’utilisateur quel mouvement il veut effectuer : 0 (en haut à gauche), 1 (en haut à droite), 2 (en bas à gauche), 3 (en bas à droite).
Si le mouvement est impossible (i.e. on sort du damier ), on le signale à l’utilisateur et on s’arrête là . Sinon, on déplace le pion et on affiche le damier résultant, en affichant un « O » pour une case vide et un « X » pour la case où se trouve le pion.
Tableau Mouv
   0
1
2
3
pos i
-1
+1
-1
+1
pos j
-1
-1
+1
+1

   Var i, j, posi, posj, i2, j2, NB en entier var correct, moveok booléen
tableau Damier [7,7] en booléen Tableau Mov [3,1] en entier
Début

// initialisation du damier

Pour i ← 0 à 7
Pour j ← 0 à 7
Damier[i,j] ← faux // le 0 c’est faux et vrai c’est la position du pion i suivant
j suivant
// initialisation tableau Mov

 
Mov[0,0] ← -1 Mov[0,1] ← -1
Mov[1,0] ← +1 Mov[1,1] ← -1
Mov[2,0] ← -1 Mov[2,1] ← 1
Mov[3,0] ← +1 Mov[3,1] ← +1

// Demande la position de pion

Ecrire “donner la position de départ : où se trouve votre pion ? ” Lire posi, posj
tantque posi< 0 OU posi> 7
écrire “merci d’écrire un chiffre entre 0 et 7” lire posi
fintantque
tantque posj< 0 OU posj > 7
écrire “merci d’écrire un chiffre entre 0 et 7” lire posj
fintantque

// Demande le mouvement
Ecrire "choisissez un mouvement : 0(haut gauche), 1(haut droite), 2(bas gauche),3 (bas droite”
Lire NB
Tantque NB < 0 OU NB > 3
écrire “merci de choisir un autre mouvement compris entre 0 et 3” lire NB
fintantque

// initialisation des nouvelles positions
i2 ← posi + Mov[NB, 0] j2 ← posj + Mov[NB, 0]
// on efface l’ancien damier et on dit à l’ordi de garder le nouveau damier Moveok ← i2 >= 0 ET i2<=7 ET j2>=0 ET j2 <= 7
Si Moveok alors Damier[posi, posj] ← faux Damier [i2, j2] ← vrai
finsi

//si pas possible on s’arrête
Ecrire “mouvement impossible”